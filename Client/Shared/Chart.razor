@inject IJSRuntime JSRuntime

<canvas id="@Id"></canvas>

@code {
    public enum ChartType
    {
        Pie,
        Bar
    }

    [Parameter]
    public string Id { get; set; }

    [Parameter]
    public string Label { get; set; } = "";

    [Parameter]
    public ChartType Type { get; set; }

    [Parameter]
    public List<string> Data { get; set; } = new List<string>();

    [Parameter]
    public List<string> Labels { get; set; } = new List<string>();

    public List<string> BackgroundColor { get; set; } = new List<string>();

    protected override async Task OnAfterRenderAsync(bool firstRender) 
    {
        SetBackGroundColors();

        //Here we create an anonymous type with all the options that need to be sent to Chart.js
        var config = new
        {
            Type = Type.ToString().ToLower(),
            Options = new
            {
                Responsive = true,
                Scales = new
                {
                    YAxes = new[]
                    {
                        new { Ticks = new {
                            BeginAtZero = true
                        } }
                    }
                },
                Legend = new
                {
                    Display = false
                }
            },
            Data = new
            {
                Datasets = new[]
                {
                    new { Data = Data, BackgroundColor = BackgroundColor, Label = Label}
                },
                Labels = Labels
            }
        };

        await JSRuntime.InvokeVoidAsync("setup", Id, config);
    }

    public void SetBackGroundColors(){
        foreach(string label in Labels){
            if(label.Contains("Q1")){
                BackgroundColor.Add("#30A9DE");
            }else if(label.Contains("Q2")){
                BackgroundColor.Add("#EFDC05");
            }else if(label.Contains("Q3")){
                BackgroundColor.Add("#566270");
            }else{
                BackgroundColor.Add("#E53A40");
            }
        }
    }
}